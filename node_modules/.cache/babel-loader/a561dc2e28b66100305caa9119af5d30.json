{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ajm322/Documents/pet-projects/ProjectX/trending-webapp/app/src/components/api/TwitterApi.js\";\nimport React from 'react';\nimport TwitterItem from './TwitterItem';\nimport { Tweet } from '../../../node_modules/react-twitter-widgets';\n\nclass TwitterApi extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [TwitterItem],\n      twitterId: '',\n      featuringHashtag: ''\n    };\n  }\n\n  componentDidMount() {\n    const proxy = 'https://cors-anywhere.herokuapp.com/';\n    const api = `${proxy}https://api.twitter.com/1.1/trends/place.json?id=2459115`; //id is currently New York\n\n    this.getTrendingResult(api, proxy);\n  }\n\n  getTrendingResult(api, proxy) {\n    fetch(api, {\n      headers: new Headers({\n        Authorization: 'Bearer AAAAAAAAAAAAAAAAAAAAAFiyKAEAAAAACvhQhi7bqt7Va64ZVz0tjMHzfzw%3DWJXMBvo6MfSjTgjPO0FeIDyc1maDlIIVkjZ66HIh1AoTjDpv8D'\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result); //here we get 50 trending hashtags, need to create cards for each\n\n      const index = Math.floor(Math.random() * result[0].trends.length);\n      this.setState({\n        featuringHashtag: result[0].trends[index].name\n      });\n      return result[0].trends[index];\n    }).then(trend => this.getSearchResult(proxy, trend));\n  }\n\n  getSearchResult(proxy, trend) {\n    return fetch(`${proxy}https://api.twitter.com/1.1/search/tweets.json?q=` + trend.query, {\n      headers: new Headers({\n        Authorization: 'Bearer AAAAAAAAAAAAAAAAAAAAAFiyKAEAAAAACvhQhi7bqt7Va64ZVz0tjMHzfzw%3DWJXMBvo6MfSjTgjPO0FeIDyc1maDlIIVkjZ66HIh1AoTjDpv8D'\n      })\n    }).then(searchRes => searchRes.json()).then(searchResult => {\n      console.log(searchResult);\n      this.setState({\n        isLoaded: true,\n        twitterId: searchResult.statuses[0].id_str\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      twitterId,\n      featuringHashtag\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Error: Fail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 14\n      }, this);\n    } else if (!isLoaded) {\n      console.log(twitterId, isLoaded, featuringHashtag);\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 14\n      }, this);\n    } else {\n      console.log(twitterId);\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Trending right now on Twitter: \", featuringHashtag]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tweet, {\n          tweetId: twitterId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default TwitterApi;","map":{"version":3,"sources":["/Users/ajm322/Documents/pet-projects/ProjectX/trending-webapp/app/src/components/api/TwitterApi.js"],"names":["React","TwitterItem","Tweet","TwitterApi","Component","constructor","props","state","error","isLoaded","items","twitterId","featuringHashtag","componentDidMount","proxy","api","getTrendingResult","fetch","headers","Headers","Authorization","then","res","json","result","console","log","index","Math","floor","random","trends","length","setState","name","trend","getSearchResult","query","searchRes","searchResult","statuses","id_str","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TwitterItem from './TwitterItem';\nimport { Tweet } from '../../../node_modules/react-twitter-widgets';\n\nclass TwitterApi extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [TwitterItem],\n      twitterId: '',\n      featuringHashtag: '',\n    };\n  }\n  componentDidMount() {\n    const proxy = 'https://cors-anywhere.herokuapp.com/';\n    const api = `${proxy}https://api.twitter.com/1.1/trends/place.json?id=2459115`; //id is currently New York\n    this.getTrendingResult(api, proxy);\n  }\n  getTrendingResult(api, proxy) {\n    fetch(api, {\n      headers: new Headers({\n        Authorization:\n          'Bearer AAAAAAAAAAAAAAAAAAAAAFiyKAEAAAAACvhQhi7bqt7Va64ZVz0tjMHzfzw%3DWJXMBvo6MfSjTgjPO0FeIDyc1maDlIIVkjZ66HIh1AoTjDpv8D',\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(result);\n        //here we get 50 trending hashtags, need to create cards for each\n        const index = Math.floor(Math.random() * result[0].trends.length);\n        this.setState({\n          featuringHashtag: result[0].trends[index].name,\n        });\n        return result[0].trends[index];\n      })\n      .then((trend) => this.getSearchResult(proxy, trend));\n  }\n\n  getSearchResult(proxy, trend) {\n    return fetch(`${proxy}https://api.twitter.com/1.1/search/tweets.json?q=` + trend.query, {\n      headers: new Headers({\n        Authorization:\n          'Bearer AAAAAAAAAAAAAAAAAAAAAFiyKAEAAAAACvhQhi7bqt7Va64ZVz0tjMHzfzw%3DWJXMBvo6MfSjTgjPO0FeIDyc1maDlIIVkjZ66HIh1AoTjDpv8D',\n      }),\n    })\n      .then((searchRes) => searchRes.json())\n      .then(\n        (searchResult) => {\n          console.log(searchResult);\n          this.setState({\n            isLoaded: true,\n            twitterId: searchResult.statuses[0].id_str,\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n  }\n\n  render() {\n    const { error, isLoaded, twitterId, featuringHashtag } = this.state;\n    if (error) {\n      return <div>Error: Fail</div>;\n    } else if (!isLoaded) {\n      console.log(twitterId, isLoaded, featuringHashtag);\n      return <ul>Loading...</ul>;\n    } else {\n      console.log(twitterId);\n      return (\n        <ul>\n          <div>Trending right now on Twitter: {featuringHashtag}</div>\n          <Tweet tweetId={twitterId}></Tweet>\n        </ul>\n      );\n    }\n  }\n}\nexport default TwitterApi;\n"]},"metadata":{},"sourceType":"module"}