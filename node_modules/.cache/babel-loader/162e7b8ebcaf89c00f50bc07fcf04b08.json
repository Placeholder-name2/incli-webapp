{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ajm322/Documents/pet-projects/ProjectX/trending-webapp/app/src/components/infinity-scroll.js\";\nimport React from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport getDatabaseItems from '../dynamodb/database';\nimport SimpleCard from './card';\n\nclass InfinityScroll extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: Array.from({\n        length: 1\n      }),\n      databaseItems: null,\n      isLoaded: false\n    };\n\n    this.fetchMoreData = () => {\n      // a fake async api call like which sends\n      // 20 more records in 1.5 secs\n      setTimeout(() => {\n        this.setState({\n          items: this.state.items.concat(Array.from({\n            length: 1\n          }))\n        });\n      }, 1500);\n    };\n  }\n\n  async componentDidMount() {\n    const databaseItems = await getDatabaseItems('twitter');\n    this.setState({\n      databaseItems\n    });\n    console.log('component did mount???????');\n  }\n\n  render() {\n    if (this.state.databaseItems) {\n      console.log('testinggggg', this.state.databaseItems.response);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Trending is coming\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n          dataLength: this.state.items.length,\n          next: this.fetchMoreData,\n          hasMore: true,\n          loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this),\n          children: this.state.items.map((i, index) => /*#__PURE__*/_jsxDEV(SimpleCard // key={index}\n          // hashtag={this.state.databaseItems.Items[index].trending_hashtag}\n          // tweetid={this.state.databaseItems.Items[index].tweet_id}\n          , {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n}\n\nexport default InfinityScroll;","map":{"version":3,"sources":["/Users/ajm322/Documents/pet-projects/ProjectX/trending-webapp/app/src/components/infinity-scroll.js"],"names":["React","InfiniteScroll","getDatabaseItems","SimpleCard","InfinityScroll","Component","state","items","Array","from","length","databaseItems","isLoaded","fetchMoreData","setTimeout","setState","concat","componentDidMount","console","log","render","response","map","i","index"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AACA,OAAOC,UAAP,MAAuB,QAAvB;;AAEA,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAC3CC,KAD2C,GACnC;AACNC,MAAAA,KAAK,EAAEC,KAAK,CAACC,IAAN,CAAW;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAX,CADD;AAENC,MAAAA,aAAa,EAAE,IAFT;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KADmC;;AAAA,SAO3CC,aAP2C,GAO3B,MAAM;AACpB;AACA;AACAC,MAAAA,UAAU,CAAC,MAAM;AACf,aAAKC,QAAL,CAAc;AACZR,UAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBS,MAAjB,CAAwBR,KAAK,CAACC,IAAN,CAAW;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAAX,CAAxB;AADK,SAAd;AAGD,OAJS,EAIP,IAJO,CAAV;AAKD,KAf0C;AAAA;;AAiB3C,QAAMO,iBAAN,GAA0B;AACxB,UAAMN,aAAa,GAAG,MAAMT,gBAAgB,CAAC,SAAD,CAA5C;AACA,SAAKa,QAAL,CAAc;AACZJ,MAAAA;AADY,KAAd;AAGAO,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKd,KAAL,CAAWK,aAAf,EAA8B;AAC5BO,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKb,KAAL,CAAWK,aAAX,CAAyBU,QAApD;AACA,0BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,cAAD;AACE,UAAA,UAAU,EAAE,KAAKf,KAAL,CAAWC,KAAX,CAAiBG,MAD/B;AAEE,UAAA,IAAI,EAAE,KAAKG,aAFb;AAGE,UAAA,OAAO,EAAE,IAHX;AAIE,UAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJV;AAAA,oBAMG,KAAKP,KAAL,CAAWC,KAAX,CAAiBe,GAAjB,CAAqB,CAACC,CAAD,EAAIC,KAAJ,kBACpB,QAAC,UAAD,CACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA,kBADD;AANH;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAoBD,KAtBD,MAsBO;AACL,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF;;AAnD0C;;AAsD7C,eAAepB,cAAf","sourcesContent":["import React from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport getDatabaseItems from '../dynamodb/database';\nimport SimpleCard from './card';\n\nclass InfinityScroll extends React.Component {\n  state = {\n    items: Array.from({ length: 1 }),\n    databaseItems: null,\n    isLoaded: false,\n  };\n\n  fetchMoreData = () => {\n    // a fake async api call like which sends\n    // 20 more records in 1.5 secs\n    setTimeout(() => {\n      this.setState({\n        items: this.state.items.concat(Array.from({ length: 1 })),\n      });\n    }, 1500);\n  };\n\n  async componentDidMount() {\n    const databaseItems = await getDatabaseItems('twitter');\n    this.setState({\n      databaseItems,\n    });\n    console.log('component did mount???????');\n  }\n\n  render() {\n    if (this.state.databaseItems) {\n      console.log('testinggggg', this.state.databaseItems.response);\n      return (\n        <div>\n          <h1>Trending is coming</h1>\n          <hr />\n          <InfiniteScroll\n            dataLength={this.state.items.length}\n            next={this.fetchMoreData}\n            hasMore={true}\n            loader={<h4>Loading...</h4>}\n          >\n            {this.state.items.map((i, index) => (\n              <SimpleCard\n              // key={index}\n              // hashtag={this.state.databaseItems.Items[index].trending_hashtag}\n              // tweetid={this.state.databaseItems.Items[index].tweet_id}\n              ></SimpleCard>\n            ))}\n          </InfiniteScroll>\n        </div>\n      );\n    } else {\n      return <div>Loading!</div>;\n    }\n  }\n}\n\nexport default InfinityScroll;\n"]},"metadata":{},"sourceType":"module"}