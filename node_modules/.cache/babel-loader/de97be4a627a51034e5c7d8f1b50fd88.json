{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ajm322/Documents/pet-projects/ProjectX/trending-webapp/app/src/components/api/TwitterApi.js\";\nimport React from 'react';\nimport TwitterItem from './TwitterItem';\nimport { Tweet } from '../../../node_modules/react-twitter-widgets';\n\nclass TwitterApi extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [TwitterItem],\n      twitterId: \"\",\n      featuringHashtag: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const proxy = 'https://cors-anywhere.herokuapp.com/';\n    const api = `${proxy}https://api.twitter.com/1.1/trends/place.json?id=2459115`; //id is currently New York\n\n    this.getTrendingResult(api, proxy);\n  }\n\n  getTrendingResult(api, proxy) {\n    fetch(api, {\n      headers: new Headers({\n        'Authorization': 'Bearer AAAAAAAAAAAAAAAAAAAAAFiyKAEAAAAACvhQhi7bqt7Va64ZVz0tjMHzfzw%3DWJXMBvo6MfSjTgjPO0FeIDyc1maDlIIVkjZ66HIh1AoTjDpv8D'\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result); //here we get 50 trending hashtags, need to create cards for each\n\n      const index = Math.floor(Math.random() * result[0].trends.length);\n      this.setState({\n        featuringHashtag: result[0].trends[index].name\n      });\n      return result[0].trends[index];\n    }).then(trend => this.getSearchResult(proxy, trend));\n  }\n\n  getSearchResult(proxy, trend) {\n    return fetch(`${proxy}https://api.twitter.com/1.1/search/tweets.json?q=` + trend.query, {\n      headers: new Headers({\n        'Authorization': 'Bearer AAAAAAAAAAAAAAAAAAAAAFiyKAEAAAAACvhQhi7bqt7Va64ZVz0tjMHzfzw%3DWJXMBvo6MfSjTgjPO0FeIDyc1maDlIIVkjZ66HIh1AoTjDpv8D'\n      })\n    }).then(searchRes => searchRes.json()).then(searchResult => {\n      console.log(searchResult);\n      this.setState({\n        isLoaded: true,\n        twitterId: searchResult.statuses[0].id_str\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      twitterId,\n      featuringHashtag\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Error: Fail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 20\n      }, this);\n    } else if (!isLoaded) {\n      console.log(twitterId, isLoaded, featuringHashtag);\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this);\n    } else {\n      console.log(twitterId);\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Trending right now on Twitter: \", featuringHashtag]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tweet, {\n          tweetId: twitterId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default TwitterApi;","map":{"version":3,"sources":["/Users/ajm322/Documents/pet-projects/ProjectX/trending-webapp/app/src/components/api/TwitterApi.js"],"names":["React","TwitterItem","Tweet","TwitterApi","Component","constructor","props","state","error","isLoaded","items","twitterId","featuringHashtag","componentDidMount","proxy","api","getTrendingResult","fetch","headers","Headers","then","res","json","result","console","log","index","Math","floor","random","trends","length","setState","name","trend","getSearchResult","query","searchRes","searchResult","statuses","id_str","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport TwitterItem from './TwitterItem'\nimport { Tweet } from '../../../node_modules/react-twitter-widgets'\n\nclass TwitterApi extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            items: [TwitterItem],\n            twitterId: \"\",\n            featuringHashtag: \"\"\n        };\n    }\n    componentDidMount() {\n\n        const proxy = 'https://cors-anywhere.herokuapp.com/'\n        const api = `${proxy}https://api.twitter.com/1.1/trends/place.json?id=2459115` //id is currently New York\n        this.getTrendingResult(api, proxy);\n    }\n    getTrendingResult(api, proxy) {\n        fetch(api, {\n            headers: new Headers({\n                'Authorization': 'Bearer AAAAAAAAAAAAAAAAAAAAAFiyKAEAAAAACvhQhi7bqt7Va64ZVz0tjMHzfzw%3DWJXMBvo6MfSjTgjPO0FeIDyc1maDlIIVkjZ66HIh1AoTjDpv8D'\n            })\n        })\n            .then(res => res.json())\n            .then(result => {\n                console.log(result);\n                //here we get 50 trending hashtags, need to create cards for each\n                const index = Math.floor(Math.random() * result[0].trends.length)\n                this.setState({\n                    featuringHashtag: result[0].trends[index].name\n                });\n                return result[0].trends[index];\n            })\n            .then(trend => this.getSearchResult(proxy, trend)\n            );\n    }\n\n    getSearchResult(proxy, trend) {\n        return fetch(`${proxy}https://api.twitter.com/1.1/search/tweets.json?q=` + trend.query, {\n            headers: new Headers({\n                'Authorization': 'Bearer AAAAAAAAAAAAAAAAAAAAAFiyKAEAAAAACvhQhi7bqt7Va64ZVz0tjMHzfzw%3DWJXMBvo6MfSjTgjPO0FeIDyc1maDlIIVkjZ66HIh1AoTjDpv8D'\n            })\n        })\n            .then(searchRes => searchRes.json())\n            .then(\n                (searchResult) => {\n                    console.log(searchResult);\n                    this.setState({\n                        isLoaded: true,\n                        twitterId: searchResult.statuses[0].id_str,\n                    });\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            );\n    }\n\n    render() {\n        const { error, isLoaded, twitterId, featuringHashtag } = this.state;\n        if (error) {\n            return <div>Error: Fail</div>;\n        } else if (!isLoaded) {\n            console.log(twitterId, isLoaded, featuringHashtag)\n            return (\n                <ul>\n                    Loading...\n                </ul>\n            );\n        } else {\n            console.log(twitterId)\n            return (\n                <ul>\n                    <div>Trending right now on Twitter: {featuringHashtag}</div>\n                    <Tweet tweetId={twitterId}></Tweet>\n                </ul>\n            );\n        }\n    }\n}\nexport default TwitterApi;"]},"metadata":{},"sourceType":"module"}