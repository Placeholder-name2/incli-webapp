{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ajm322/Documents/ProjectX/trending-webapp/app/src/components/infinity-scroll.js\";\nimport React from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport SimpleCard from './card';\n\nclass InfinityScroll extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: Array.from({\n        length: 20\n      })\n    };\n\n    this.fetchMoreData = () => {\n      // a fake async api call like which sends\n      // 20 more records in 1.5 secs\n      setTimeout(() => {\n        this.setState({\n          items: this.state.items.concat(Array.from({\n            length: 20\n          }))\n        });\n      }, 1500);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Trending is comming\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        dataLength: this.state.items.length,\n        next: this.fetchMoreData,\n        hasMore: true,\n        loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 19\n        }, this),\n        children: this.state.items.map((i, index) => /*#__PURE__*/_jsxDEV(SimpleCard, {}, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default InfinityScroll;","map":{"version":3,"sources":["/Users/ajm322/Documents/ProjectX/trending-webapp/app/src/components/infinity-scroll.js"],"names":["React","InfiniteScroll","SimpleCard","InfinityScroll","Component","state","items","Array","from","length","fetchMoreData","setTimeout","setState","concat","render","map","i","index"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,UAAP,MAAuB,QAAvB;;AAEA,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAC3CC,KAD2C,GACnC;AACNC,MAAAA,KAAK,EAAEC,KAAK,CAACC,IAAN,CAAW;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAX;AADD,KADmC;;AAAA,SAK3CC,aAL2C,GAK3B,MAAM;AACpB;AACA;AACAC,MAAAA,UAAU,CAAC,MAAM;AACf,aAAKC,QAAL,CAAc;AACZN,UAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBO,MAAjB,CAAwBN,KAAK,CAACC,IAAN,CAAW;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAAX,CAAxB;AADK,SAAd;AAGD,OAJS,EAIP,IAJO,CAAV;AAKD,KAb0C;AAAA;;AAe3CK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,cAAD;AACE,QAAA,UAAU,EAAE,KAAKT,KAAL,CAAWC,KAAX,CAAiBG,MAD/B;AAEE,QAAA,IAAI,EAAE,KAAKC,aAFb;AAGE,QAAA,OAAO,EAAE,IAHX;AAIE,QAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJV;AAAA,kBAMG,KAAKL,KAAL,CAAWC,KAAX,CAAiBS,GAAjB,CAAqB,CAACC,CAAD,EAAIC,KAAJ,kBACpB,QAAC,UAAD,MAAiBA,KAAjB;AAAA;AAAA;AAAA;AAAA,gBADD;AANH;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AAjC0C;;AAoC7C,eAAed,cAAf","sourcesContent":["import React from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport SimpleCard from './card';\n\nclass InfinityScroll extends React.Component {\n  state = {\n    items: Array.from({ length: 20 }),\n  };\n\n  fetchMoreData = () => {\n    // a fake async api call like which sends\n    // 20 more records in 1.5 secs\n    setTimeout(() => {\n      this.setState({\n        items: this.state.items.concat(Array.from({ length: 20 })),\n      });\n    }, 1500);\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Trending is comming</h1>\n        <hr />\n        <InfiniteScroll\n          dataLength={this.state.items.length}\n          next={this.fetchMoreData}\n          hasMore={true}\n          loader={<h4>Loading...</h4>}\n        >\n          {this.state.items.map((i, index) => (\n            <SimpleCard key={index}>\n            </SimpleCard>\n          ))}\n        </InfiniteScroll>\n      </div>\n    );\n  }\n}\n\nexport default InfinityScroll;\n"]},"metadata":{},"sourceType":"module"}